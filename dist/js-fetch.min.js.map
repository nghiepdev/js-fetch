{"version":3,"sources":["../src/js-fetch.js"],"names":[],"mappings":"iPAMA,CAAC,SAAC,CAAD,CAAS,CAAT,CAAqB,CACD,QAAnB,sBAAO,QAAP,qBAAO,OAAP,IAAiD,WAAlB,QAAO,OAAtC,CAA+D,OAAO,OAAP,CAAiB,GAAhF,CACkB,UAAlB,QAAO,OAAP,EAAgC,OAAO,GAAvC,CAA6C,OAAO,CAAP,CAA7C,CACA,EAAS,EAAO,OAAP,CAAiB,GAA1B,CACA,SAAW,OAAO,OAAP,CAAiB,GAA5B,CACD,CALD,SAKS,UAAM,CACb,GAAM,KAAN,CAEA,MAAO,UAAS,CAAT,CAAc,CAAd,CAAyD,IAAlC,EAAkC,2DAAjB,CAAiB,wDAAP,KAAO,CAC9D,MAAO,IAAI,QAAJ,CAAY,SAAC,CAAD,CAAU,CAAV,CAAqB,CACtC,KAAwB,WAApB,QAAO,SAAX,EA2CE,EAAO,GAAI,MAAJ,CAAU,wCAAV,CAAP,CA3CF,KACE,IAAI,CAAC,EAAK,QAAL,CAAc,CAAd,CAAL,CAAyB,CACvB,GAAM,GAAK,SAAS,aAAT,CAAuB,QAAvB,CAAX,CAGA,GAFA,EAAG,GAAH,CAAS,CAET,CAA0B,QAAtB,sBAAO,EAAP,qBAAO,CAAP,IAAkC,CAAC,MAAM,OAAN,CAAc,CAAd,CAAvC,CACE,IAAI,GAAM,IAAV,GAAe,EAAf,CACE,EAAG,GAAH,EAAQ,EAAW,GAAX,CADV,CAKF,EAAG,OAAH,CAAa,EAAG,MAAH,CAAY,WAAO,CAC1B,GAAoB,OAAb,KAAI,IADe,GAE5B,EAAG,MAAH,EAF4B,CAG5B,EAAO,CAAP,CAH4B,EAK1B,CAL0B,EAM5B,EAAQ,OAAO,CAAP,CAAR,CAN4B,CAQ9B,GACD,CAnBsB,CAqBvB,SAAS,IAAT,CAAc,WAAd,CAA0B,CAA1B,CArBuB,CAsBvB,EAAK,IAAL,CAAU,CAAV,CACD,CAvBD,IAwBE,IAAI,CAAJ,CAAa,CACX,GAAM,IAAgB,YAAY,UAAM,CAClC,OAAO,CAAP,CADkC,GAEpC,cAAc,EAAd,CAFoC,CAGpC,EAAQ,OAAO,CAAP,CAAR,CAHoC,CAKvC,CALqB,CAKnB,GALmB,CAAtB,CAOA,WAAW,UAAM,CACf,cAAc,EAAd,CADe,CAEf,EAAO,yBAA2B,CAAlC,CACD,CAHD,CAGG,CAHH,CAKD,CAbD,IAcE,IAMP,CA9CM,CA+CR,CACF,CAzDD,C","file":"js-fetch.min.js","sourcesContent":["/*!\n * jsFetch v1.1.0\n * (c) Nghiep<me@nghiepit.pro>\n * MIT License.\n */\n\n((global, factory) => {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global ? global.jsFetch = factory() :\n  window && (window.jsFetch = factory());\n})(this, () => {\n  const urls = [];\n\n  return function(url, waitVar, attributes = {}, timeout = 15000) {\n    return new Promise((resolve, reject) => {\n      if (typeof document !== 'undefined') {\n        if (!urls.includes(url)) {\n          const el = document.createElement('script');\n          el.src = url;\n          \n          if (typeof attributes === 'object' && !Array.isArray(attributes)) {\n            for(const i in attributes) {\n              el[i] = attributes[i];\n            }\n          }\n          \n          el.onerror = el.onload = err => {\n            if (err && err.type === 'error') {\n              el.remove();\n              reject(err);\n            }\n            if (waitVar) {\n              resolve(window[waitVar]);\n            }\n            resolve();\n          };\n\n          document.body.appendChild(el);\n          urls.push(url);\n        } else {\n          if (waitVar) {\n            const timerInterval = setInterval(() => {\n              if (window[waitVar]) {\n                clearInterval(timerInterval);\n                resolve(window[waitVar]);\n              }\n            }, 500);\n\n            setTimeout(() => {\n              clearInterval(timerInterval);\n              reject('Cannot found variable ' + waitVar);\n            }, timeout);\n\n          } else {\n            resolve();\n          }\n        }\n      } else {\n        reject(new Error('This package is not called during SSR.'));\n      }\n    });\n  }\n});\n"]}